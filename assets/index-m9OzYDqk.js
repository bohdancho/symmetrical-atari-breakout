var y=Object.defineProperty;var m=(h,e,t)=>e in h?y(h,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):h[e]=t;var c=(h,e,t)=>(m(h,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))o(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const l of s.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&o(l)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerPolicy&&(s.referrerPolicy=i.referrerPolicy),i.crossOrigin==="use-credentials"?s.credentials="include":i.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}})();class g{constructor(e){c(this,"sizePx");c(this,"ctx");this.ctx=g.getContext(e);const{width:t,height:o}=e.getBoundingClientRect();e.width=t,e.height=o,this.sizePx=t}static getContext(e){const t=e.getContext("2d");if(!t)throw Error("No ctx");return t}clear(){this.ctx.clearRect(0,0,this.sizePx,this.sizePx)}}const n={field:{sideLength:16},colors:{left:"#F8AB2B",right:"#4D428B"}};class r{constructor(e,t){this.x=e,this.y=t}static areEqual(e,t){return e.x===t.x&&e.y===t.y}add(e){return new r(this.x+e.x,this.y+e.y)}multiply(e){return new r(this.x*e,this.y*e)}floor(){return new r(Math.floor(this.x),Math.floor(this.y))}ceil(){return new r(Math.ceil(this.x),Math.ceil(this.y))}normalize(e){return new r(Math.min(e.x,Math.max(0,this.x)),Math.min(e.y,Math.max(0,this.y)))}}class u{constructor(e,t){c(this,"field");c(this,"squareSizePx");c(this,"leftPlayer");c(this,"rightPlayer");c(this,"leftOwns");this.canvas=e,this.scoreUpdate=t,this.leftOwns=n.field.sideLength**2/2,this.squareSizePx=this.canvas.sizePx/n.field.sideLength,this.field=Array.from({length:n.field.sideLength},()=>Array.from({length:n.field.sideLength},(o,i)=>i<n.field.sideLength/2?"left":"right")),this.leftPlayer={position:new r(Math.floor(n.field.sideLength/7),Math.floor(n.field.sideLength/4)),speed:new r(n.field.sideLength*1.8,n.field.sideLength*.5),name:"left"},this.rightPlayer={position:new r(Math.floor(n.field.sideLength-n.field.sideLength/7),Math.floor(n.field.sideLength/2)),speed:new r(n.field.sideLength*-1.8,n.field.sideLength*.5),name:"right"}}render(e){this.canvas.clear(),this.field.forEach((t,o)=>t.forEach((i,s)=>{const l=new r(s,o);this.paintSquare(l,u.getEnemyName(i))})),this.translateWithBounce(this.leftPlayer,e),this.translateWithBounce(this.rightPlayer,e),this.paintSquare(this.leftPlayer.position,this.leftPlayer.name),this.paintSquare(this.rightPlayer.position,this.rightPlayer.name)}paintSquare(e,t){this.canvas.ctx.fillStyle=n.colors[t],this.canvas.ctx.fillRect(e.x*this.squareSizePx,e.y*this.squareSizePx,this.squareSizePx+1,this.squareSizePx+1)}translateWithBounce(e,t){const o=e.speed.multiply(t/1e3),i=e.position.add(o),s=this.getCollision(i,e.name);if(!s){e.position=i;return}e.position=e.position.add(o.multiply(-.01));const l={x:1,y:1};l.x=s.shift.x===0?1:-1,l.y=s.shift.y===0?1:-1,e.speed=new r(e.speed.x*l.x,e.speed.y*l.y),s.capturedSquare&&(this.field[s.capturedSquare.y][s.capturedSquare.x]=e.name,e.name==="left"?this.leftOwns++:this.leftOwns--,this.scoreUpdate({left:this.leftOwns,right:n.field.sideLength**2-this.leftOwns}))}getCollision(e,t){const o=[{x:-1,y:0},{x:0,y:-1},{x:0,y:1},{x:1,y:0}];for(const i of o){const s={x:void 0,y:void 0};["x","y"].forEach(a=>{i[a]===0?s[a]=Math.round(e[a]):i[a]===1?s[a]=Math.floor(e[a]+1):i[a]===-1&&(s[a]=Math.ceil(e[a]-1))});const f=new r(s.x,s.y);if(f.x<0||f.y<0||f.x>=n.field.sideLength||f.y>=n.field.sideLength)return{shift:i};if(this.field[f.y][f.x]===u.getEnemyName(t))return{capturedSquare:f,shift:i}}}static getEnemyName(e){return e==="left"?"right":"left"}}const p=document.querySelector("#canvas"),w=new g(p),P=new u(w,q);let d;function x(){const h=performance.now();d||(d=h);const e=performance.now()-d;d=h,P.render(e),requestAnimationFrame(x)}const S=document.querySelector("#leftScore"),L=document.querySelector("#rightScore");function q({left:h,right:e}){S.innerText=String(h),L.innerText=String(e)}x();
